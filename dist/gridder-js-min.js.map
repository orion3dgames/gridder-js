{"mappings":"MAAA,IAAIA,EA8BJ,SAASC,IACP,IAAIC,EAAO,GAAGC,MAAMC,KAAKC,WACrBC,GAAO,EACW,kBAAXJ,EAAK,KACdI,EAAOJ,EAAKK,SAEd,IAAIC,EAASN,EAAK,GAClB,GAAIO,EAAeD,GACjB,MAAM,IAAIE,MAAM,8BAIlB,IAFA,IAAIC,EAAYT,EAAKC,MAAM,GACvBS,EAAMD,EAAUE,OACXC,EAAI,EAAGA,EAAIF,EAAKE,IAAK,CAC5B,IAAIC,EAAWJ,EAAUG,GACzB,IAAK,IAAIE,KAAOD,EACd,GAAIE,OAAOC,UAAUC,eAAef,KAAKW,EAAUC,GAAM,CACvD,IAAII,EAAQL,EAASC,GACrB,GAAIV,GAAQe,EAAYD,GAAQ,CAC9B,IAAIE,EAAOC,MAAMC,QAAQJ,GAAS,GAAK,GACvCZ,EAAOQ,GAAOf,GACZ,EACAgB,OAAOC,UAAUC,eAAef,KAAKI,EAAQQ,KAASP,EAAeD,EAAOQ,IACxER,EAAOQ,GACPM,EACJF,E,MAGFZ,EAAOQ,GAAOI,C,EAKtB,OAAOZ,C,EAGT,SAASa,EAAYI,GACnB,OAAOF,MAAMC,QAAQC,IAAiC,mBAAzB,CAAE,EAACC,SAAStB,KAAKqB,E,CAGhD,SAAShB,EAAekB,GACtB,OAAQA,GAAsB,iBAAPA,GAAiC,mBAAPA,C,KCka/CC,E,ECxeiB,CAadC,QAAI,SAwBPC,QAAA,EAGAC,IAAA,GA2BFC,YAAA,G,qODhEa,MAAAC,EACbC,mBAAmB,CAGnBC,YAAYC,EAAIC,GACd,IAAIC,EAcJ,GAbAC,KAAKC,QAAUJ,EAEfG,KAAKE,kBAAoB,GACzBF,KAAKG,UAAY,GACjBH,KAAKI,eAAiB,KACtBJ,KAAKK,gBAAkB,KACvBL,KAAKM,YAAc,KACnBN,KAAKP,YAAc,GAES,iBAAjBO,KAAKC,UACdD,KAAKC,QAAUM,SAASC,cAAcR,KAAKC,UAGzCD,KAAKC,QAAQQ,UACf,MAAM,IAAItC,MAAM,+BAIlBuB,EAAUgB,UAAUC,KAAKX,MAGzBA,KAAKC,QAAQQ,UAAYT,KAEzB,IAAIY,EACkD,OAArDb,EAAOL,EAAUmB,kBAAkBb,KAAKC,UAAoBF,EAAO,GAGpEC,KAAKF,QAAUrC,GACX,EACA,GACAqD,EACAF,EACW,MAAXd,EAAkBA,EAAU,IAIhCE,MAAKe,G,CAKPA,KAKEf,KAAKM,YAAcN,KAAKC,QAAQO,cAAc,IAAIR,KAAKF,QAAQkB,WAG/D,IAAK,IAAInB,KAAMG,KAAKM,YAAYW,SAC5BjB,KAAKE,kBAAkBS,KAAKd,GAGhC,GAA8B,MAA1BG,KAAKE,oBAA8BF,KAAKE,kBAAkB5B,OAC5D,MAAM,IAAIH,MACR,aAAa6B,KAAKF,QAAQkB,wGA0B9B,OArBAhB,KAAKE,kBAAkBgB,SAASC,GACrBnB,KAAKG,UAAUQ,KAAK,CACvBV,QAASkB,EACTC,OAAQ,CACJC,MAAQC,IACJtB,MAAKuB,EAAMD,EAAI,OAO/BtB,MAAKwB,IAGL9B,EAAU+B,gBAGVzB,MAAK0B,IAGE1B,KAAKF,QAAQiB,KAAKlD,KAAKmC,KAAMA,KAAKC,Q,CAI3CuB,KACE,IACI/B,EAAcO,KAAKF,QAAQL,YAE/B,GADAO,KAAKP,YAAYkB,KAAK,CAAC,UAAWX,KAAKF,UACnCL,EACF,IAAK,MAAMkC,KAASlC,EAJTO,KAKFP,YAAYkB,KAAK,CACtBiB,SAASD,GACTlE,GAAO,EAAM,GAPNuC,KAOiBF,QAASL,EAAYkC,K,CAMrDD,KAEE1B,KAAKM,YAAYuB,WAAWC,MAAMxC,QAAU,OAG5CU,KAAKM,YAAYwB,MAAMH,MAAQ,OAC/B3B,KAAKM,YAAYwB,MAAMxC,QAAU,OACjCU,KAAKM,YAAYwB,MAAMC,oBAAsB,UAAU/B,KAAKF,QAAQP,QAAQ,SAC5ES,KAAKM,YAAYwB,MAAME,aAAe,YACtChC,KAAKM,YAAYwB,MAAMtC,IAAMQ,KAAKF,QAAQN,IAAI,KAG9C,IAAIyC,EAAmBjC,KAAKC,QAAQO,cAAc,IAAIR,KAAKF,QAAQoC,eASnE,OARGD,GACDjC,MAAKmC,EAAmBF,UAGnBjC,KAAKoC,SACZpC,KAAKE,kBAAkBgB,SAASjB,GAC9BA,EAAQoC,UAAUC,IAAI,kBAEjBtC,MAAKuC,G,CAIdA,KACE,OAAOvC,KAAKG,UAAUqC,KAAKC,GACzB,MACE,IAAIxE,EAAS,GACb,IAAK,IAAIyE,KAASD,EAAiBrB,OAAQ,CACzC,IAAIuB,EAAWF,EAAiBrB,OAAOsB,GACvCzE,EAAO0C,KACL8B,EAAiBxC,QAAQ2C,iBAAiBF,EAAOC,GAAU,G,CAG/D,OAAO1E,CACR,EATD,I,CAcJ4E,KACE,OAAO7C,KAAKG,UAAUqC,KAAKC,GACzB,MACE,IAAIxE,EAAS,GACb,IAAK,IAAIyE,KAASD,EAAiBrB,OAAQ,CACzC,IAAIuB,EAAWF,EAAiBrB,OAAOsB,GACvCzE,EAAO0C,KACL8B,EAAiBxC,QAAQ6C,oBAAoBJ,EAAOC,GAAU,G,CAGlE,OAAO1E,CACR,EATD,I,CAcJ8E,KACE/C,MAAK6C,G,CAIPG,QAAYC,GAEV,IAAIC,EAAKD,EAAEE,OAQX,GALID,EAAGb,UAAUe,SAASpD,KAAKF,QAAQuD,aACrCH,EAAKA,EAAGI,QAAQ,IAAItD,KAAKF,QAAQuD,YAIhCrD,KAAKK,gBAAgB,CAGtB,GAAG6C,EAAGb,UAAUe,SAAS,UAEvB,OADApD,MAAKuD,EAAOL,IACL,EAITlD,MAAKuD,EAAOL,E,CAIdlD,KAAKM,YAAYkD,iBAAiB,IAAIxD,KAAKF,QAAQuD,WAAWnC,SAASuC,IACnEA,EAAIpB,UAAUqB,OAAO,SAAS,IAElCR,EAAGb,UAAUC,IAAI,UAGjB,IAAIqB,EAAW3D,MAAK4D,EAAgBV,GAGpC,MAAMW,QAAkB7D,MAAK8D,EAAoBZ,GAGjD,IAAIa,EAAoB/D,MAAKgE,EAA0Bd,GAGnDe,EAAiB1D,SAAS2D,cAAc,OAC5CD,EAAe5B,UAAUC,IAAI,mBAC7B2B,EAAeE,UAAYN,EAG3BF,EAASQ,UAAY,GACrBR,EAASS,YAAYL,GACrBJ,EAASS,YAAYH,GAGrBjE,MAAKqE,EAA4BV,EAAUT,GAG3ClD,KAAKI,eAAiB8C,EACtBlD,KAAKK,gBAAkBsD,EAGK,UAAzB3D,KAAKF,QAAQR,UACdU,KAAKsE,SAAWtE,KAAKF,QAAQP,QAC7BS,KAAKuE,OAAO,CAAEhF,QAASS,KAAKF,QAAQP,QAAUiF,KAAKC,MAAMzE,KAAKF,QAAQP,QAAQ,MAIpD,WAAzBS,KAAKF,QAAQR,SACd4D,EAAGwB,eAAe,CAACC,SAAU,SAAUC,MAAO,QAASC,OAAQ,YAIjE7E,KAAKF,QAAQyB,KAAK1D,KAAKmC,K,CAGzBmC,GAAmB2C,GAEW,UAAzB9E,KAAKF,QAAQR,UACdU,KAAKM,YAAYwB,MAAMiD,KAAO,MAC9BD,EAAShD,MAAMkD,mBAAqB,UACpCF,EAAShD,MAAMiD,KAAO,eAAe/E,KAAKF,QAAQN,IAAI,MAEtDsF,EAAShD,MAAMmD,SAAW,WAC1BH,EAAShD,MAAMoD,UAAY,aAC3BJ,EAAShD,MAAMqD,IAAM,MACrBL,EAAShD,MAAMsD,WAAapF,KAAKF,QAAQN,IAAI,KAC7CsF,EAAShD,MAAMuD,UAAY,SAC3BP,EAAShD,MAAMwD,UAAY,UAGD,WAAzBtF,KAAKF,QAAQR,UACdwF,EAAShD,MAAMyD,WAAa,YAAYvF,KAAKF,QAAQP,QACrDuF,EAAShD,MAAM0D,QAAU,W,CAI7B5B,GAAkB,SAAU/D,GAG1B,IAAI8D,EAAWpD,SAAS2D,cAAc,OAqBtC,OAlBAP,EAAStB,UAAUC,IAAItC,KAAKF,QAAQoC,eACpCyB,EAAStB,UAAUC,IAAI,WAAWtC,KAAKF,QAAQR,SAG/CqE,EAASQ,UAAYnE,KAAKF,QAAQ2F,YAGlCzF,MAAKmC,EAAmBwB,GACI,UAAzB3D,KAAKF,QAAQR,SACdU,MAAK0F,EAAa/B,EAAU3D,KAAKM,aAGP,WAAzBN,KAAKF,QAAQR,SACdU,MAAK0F,EAAa/B,EAAU9D,GAG9BA,EAAGgC,WAAWQ,UAAUC,IAAItC,KAAKF,QAAQ6F,mBAElChC,C,EAGTJ,GAAS,SAAU1D,GAGjBA,EAAGwC,UAAUqB,OAAO,UAGpB1D,KAAKK,gBAAgBqD,SAGrB7D,EAAGgC,WAAWQ,UAAUqB,OAAO1D,KAAKF,QAAQ6F,mBAG5C3F,KAAKM,YAAYwB,MAAMH,MAAQ,OAC/B3B,KAAKuE,SAGLvE,KAAKI,eAAiB,KACtBJ,KAAKK,gBAAkB,KAGM,UAAzBL,KAAKF,QAAQR,SACfU,KAAKuE,OAAO,CAAEhF,QAASS,KAAKsE,WAI9BtE,KAAKF,QAAQyD,MAAM1F,KAAKgC,E,EAI1BiE,GAAsBd,eAAgBnD,GAGpC,GAAGA,EAAG+F,QAAQzC,OAAO,CACnB,IAAIA,EAAStD,EAAG+F,QAAQzC,OAExB,OADoB5C,SAASsF,eAAe1C,GACvBgB,UAAU2B,M,CAIjC,IAAIC,EAAMlG,EAAG+F,QAAQG,IAErB,aADqBC,MAAMD,IACXE,M,EAIlBjC,GAA4B,SAAUkC,GAGpC,IAAIrG,EAAKU,SAAS2D,cAAc,OAIhC,GAHArE,EAAGwC,UAAUC,IAAI,sBAGdtC,MAAKmG,EAAoBD,EAAQ,IAAIlG,KAAKF,QAAQuD,WAAW,CAC9D,IAAI+C,EAAO7F,SAAS2D,cAAc,KAClCkC,EAAK/D,UAAUC,IAAI,gBACnB8D,EAAKjC,UAAYnE,KAAKF,QAAQuG,SAC9BxG,EAAGuE,YAAYgC,E,CAIjB,GAAGpG,MAAKsG,EAAgBJ,EAAQ,IAAIlG,KAAKF,QAAQuD,WAAW,CAC1D,IAAIkD,EAAOhG,SAAS2D,cAAc,KAClCqC,EAAKlE,UAAUC,IAAI,gBACnBiE,EAAKpC,UAAYnE,KAAKF,QAAQ0G,SAC9B3G,EAAGuE,YAAYmC,E,CAIjB,IAAIhD,EAAQhD,SAAS2D,cAAc,KAKnC,OAJAX,EAAMlB,UAAUC,IAAI,iBACpBiB,EAAMY,UAAYnE,KAAKF,QAAQ2G,UAC/B5G,EAAGuE,YAAYb,GAER1D,C,EAGTwE,GAA8B,SAASV,EAAUuC,GAE/CvC,EAASnD,cAAc,kBAAkBoC,iBAAiB,SAAS,KACjE5C,MAAKuD,EAAO2C,EAAO,IAGrB,IAAIK,EAAO5C,EAASnD,cAAc,iBAC/B+F,GACDA,EAAK3D,iBAAiB,SAAS,KAC7B,IAAIO,EAASnD,MAAKsG,EAAgBJ,EAAQ,IAAIlG,KAAKF,QAAQuD,WAC3D,GAAGF,EAAQ,CACT,MAAMT,EAAQ,IAAIgE,MAAM,QAAS,CAACC,SAAS,IAC3CxD,EAAOyD,cAAclE,E,KAK3B,IAAI0D,EAAOzC,EAASnD,cAAc,iBAC/B4F,GACDA,EAAKxD,iBAAiB,SAAS,KAC7B,IAAIO,EAASnD,MAAKmG,EAAoBD,EAAQ,IAAIlG,KAAKF,QAAQuD,WAC/D,GAAGF,EAAQ,CACT,MAAMT,EAAQ,IAAIgE,MAAM,QAAS,CAACC,SAAS,IAC3CxD,EAAOyD,cAAclE,E,MAO7BmE,GAAgB,SAASC,EAASC,GAChCA,EAAalF,WAAWmF,QAAQF,E,EAGlCpB,GAAe,SAASoB,EAASC,GAC/BA,EAAalF,WAAWgF,aAAaC,EAASC,EAAaE,Y,EAG7DX,GAAkB,SAAUY,EAAMC,GAChC,IAAIC,EAAUF,EAAKG,mBACnB,IAAKF,EAAU,OAAOC,EACtB,KAAOA,GAAS,CACd,GAAIA,EAAQE,QAAQH,GAAW,OAAOC,EACtCA,EAAUA,EAAQC,kB,GAItBlB,GAAsB,SAAUe,EAAMC,GACpC,IAAIC,EAAUF,EAAKK,uBACnB,IAAKJ,EAAU,OAAOC,EACtB,KAAOA,GAAS,CACd,GAAIA,EAAQE,QAAQH,GAAW,OAAOC,EACtCA,EAAUA,EAAQG,sB,GAMtBhD,OAAOzE,GACLE,KAAKwH,SAAWxH,KAAKF,QACrBE,KAAKF,QAAUrC,GACX,EACA,GACAuC,KAAKF,QACM,MAAXA,EAAkBA,EAAU,IAE9BE,MAAK0B,G,CAGT+F,UAGE,OAFAzH,MAAK+C,WACE/C,KAAKC,QAAQQ,UACbf,EAAUgB,UAAUgH,OAAOhI,EAAUgB,UAAUiH,QAAQ3H,MAAO,E,EAKzEN,EAAUI,QAAU,GAGpBJ,EAAUmB,kBAAoB,SAAUZ,GAEtC,OAAIA,EAAQ2H,aAAa,MAChBlI,EAAUI,QAAQ+H,SAAS5H,EAAQ2H,aAAa,aAEvD,C,EAMJlI,EAAU+B,cAAgB,WACxB,IAAIqG,EAASC,OAAOC,WACpBtI,EAAUgB,UAAUQ,SAAS+G,IAE3B,GAAGA,EAAQxI,YAAYnB,OAAS,EAAG,OAAO,EAE1C,IAAI,MAAM4J,KAAKD,EAAQxI,YAAa,CAClC,GAAGyI,EAAI,EAAE,CACP,IAAIC,EAAaF,EAAQxI,YAAYyI,GACrC,GAAGJ,GAAUK,EAAW,GAAG,CACzBF,EAAQ1D,OAAO4D,EAAW,IAC1B,K,EAIJF,EAAQ1D,OAAO0D,EAAQxI,YAAY,GAAG,G,MAM5CC,EAAUgB,UAAY,GAGA,oBAAX0H,QAAqC,OAAXA,SACjCA,OAAOC,GAAG5H,UAAY,SAAUX,GAC5B,OAAOE,KAAKsI,MAAK,WACjB,OAAO,IAAI5I,EAAUM,KAAMF,E,MAQnCiI,OAAOnF,iBAAiB,UAAU,SAASK,GACzCsF,aAAalJ,GACbA,EAAcmJ,YAAW,WACvB9I,EAAU+B,e,GACT,I,IE3eLsG,OAAOU,UAAY/I,C","sources":["node_modules/just-extend/index.esm.js","src/gridder-js.js","src/options.js","tool/gridderjs-global.js"],"sourcesContent":["var objectExtend = extend;\n\n/*\n  var obj = {a: 3, b: 5};\n  extend(obj, {a: 4, c: 8}); // {a: 4, b: 5, c: 8}\n  obj; // {a: 4, b: 5, c: 8}\n\n  var obj = {a: 3, b: 5};\n  extend({}, obj, {a: 4, c: 8}); // {a: 4, b: 5, c: 8}\n  obj; // {a: 3, b: 5}\n\n  var arr = [1, 2, 3];\n  var obj = {a: 3, b: 5};\n  extend(obj, {c: arr}); // {a: 3, b: 5, c: [1, 2, 3]}\n  arr.push(4);\n  obj; // {a: 3, b: 5, c: [1, 2, 3, 4]}\n\n  var arr = [1, 2, 3];\n  var obj = {a: 3, b: 5};\n  extend(true, obj, {c: arr}); // {a: 3, b: 5, c: [1, 2, 3]}\n  arr.push(4);\n  obj; // {a: 3, b: 5, c: [1, 2, 3]}\n\n  extend({a: 4, b: 5}); // {a: 4, b: 5}\n  extend({a: 4, b: 5}, 3); {a: 4, b: 5}\n  extend({a: 4, b: 5}, true); {a: 4, b: 5}\n  extend('hello', {a: 4, b: 5}); // throws\n  extend(3, {a: 4, b: 5}); // throws\n*/\n\nfunction extend(/* [deep], obj1, obj2, [objn] */) {\n  var args = [].slice.call(arguments);\n  var deep = false;\n  if (typeof args[0] == 'boolean') {\n    deep = args.shift();\n  }\n  var result = args[0];\n  if (isUnextendable(result)) {\n    throw new Error('extendee must be an object');\n  }\n  var extenders = args.slice(1);\n  var len = extenders.length;\n  for (var i = 0; i < len; i++) {\n    var extender = extenders[i];\n    for (var key in extender) {\n      if (Object.prototype.hasOwnProperty.call(extender, key)) {\n        var value = extender[key];\n        if (deep && isCloneable(value)) {\n          var base = Array.isArray(value) ? [] : {};\n          result[key] = extend(\n            true,\n            Object.prototype.hasOwnProperty.call(result, key) && !isUnextendable(result[key])\n              ? result[key]\n              : base,\n            value\n          );\n        } else {\n          result[key] = value;\n        }\n      }\n    }\n  }\n  return result;\n}\n\nfunction isCloneable(obj) {\n  return Array.isArray(obj) || {}.toString.call(obj) == '[object Object]';\n}\n\nfunction isUnextendable(val) {\n  return !val || (typeof val != 'object' && typeof val != 'function');\n}\n\nexport {objectExtend as default};\n","import extend from \"just-extend\";\r\nimport defaultOptions from \"./options\";\r\n\r\nexport default class GridderJS {\r\n  static initClass() {\r\n    \r\n  }\r\n  constructor(el, options) {\r\n    let left;\r\n    this.element = el;\r\n\r\n    this.clickableElements = [];\r\n    this.listeners = [];\r\n    this.clickedElement = null;\r\n    this.expanderElement = null;\r\n    this.listElement = null;\r\n    this.breakpoints = [];\r\n\r\n    if (typeof this.element === \"string\") {\r\n      this.element = document.querySelector(this.element);\r\n    }\r\n\r\n    if (this.element.gridderjs) {\r\n      throw new Error(\"GridderJS already attached.\");\r\n    }\r\n\r\n    // Now add this gridder to the global instances.\r\n    GridderJS.instances.push(this);\r\n\r\n    // Put the gridder inside the element itself.\r\n    this.element.gridderjs = this;\r\n\r\n    let elementOptions =\r\n    (left = GridderJS.optionsForElement(this.element)) != null ? left : {};\r\n\r\n    // set options\r\n    this.options = extend(\r\n        true,\r\n        {},\r\n        defaultOptions,\r\n        elementOptions,\r\n        options != null ? options : {}\r\n      );\r\n\r\n    // init\r\n    this.#init();\r\n  }\r\n\r\n  // The function that gets called when GridderJS is initialized. You\r\n  // can (and should) setup event listeners inside this function.\r\n  #init() {\r\n\r\n    //this.element.style.display = 'flex';\r\n\r\n    // GET GRIDDER LIST\r\n    this.listElement = this.element.querySelector('.'+this.options.gridClass)\r\n\r\n    // get elements\r\n    for (let el of this.listElement.children) {\r\n        this.clickableElements.push(el);\r\n    }\r\n\r\n    if (this.clickableElements == null || !this.clickableElements.length) {\r\n      throw new Error(\r\n        `Invalid \\`${this.options.gridClass}\\` option provided. Please provide a CSS selector, a plain HTML element or a list of those.`\r\n      );\r\n    }\r\n\r\n    //\r\n    this.clickableElements.forEach((clickableElement) => {\r\n        return this.listeners.push({\r\n            element: clickableElement,\r\n            events: {\r\n                click: (evt) => {\r\n                    this.#open(evt);\r\n                },\r\n            },\r\n        });\r\n    });\r\n\r\n    // parse breakpoints;\r\n    this.#parseBreakpoints();\r\n\r\n    // Initial Resize\r\n    GridderJS.resizeGridder();\r\n\r\n    // Enable Gridder\r\n    this.#enable();\r\n\r\n    // init callback\r\n    return this.options.init.call(this, this.element);\r\n  }\r\n\r\n  // parse breakpoint to be able to use later on each resize\r\n  #parseBreakpoints(){\r\n    var _this9 = this;\r\n    var breakpoints = this.options.breakpoints;\r\n    this.breakpoints.push([\"default\", this.options]);\r\n    if (breakpoints) {\r\n      for (const width in breakpoints) {\r\n        _this9.breakpoints.push([\r\n          parseInt(width),\r\n          extend(true, {}, _this9.options, breakpoints[width])\r\n        ]);\r\n      };\r\n    }\r\n  }\r\n\r\n  #enable() {\r\n\r\n    this.listElement.parentNode.style.display = 'flex';\r\n\r\n    // init gridder style and css\r\n    this.listElement.style.width = '100%';\r\n    this.listElement.style.display = 'grid';\r\n    this.listElement.style.gridTemplateColumns = 'repeat('+this.options.columns+', 1fr)';\r\n    this.listElement.style.gridAutoFlow = 'row dense';\r\n    this.listElement.style.gap = this.options.gap+'px';\r\n\r\n    // set explander style if exists\r\n    let existingExpander = this.element.querySelector('.'+this.options.expanderClass);\r\n    if(existingExpander){\r\n      this.#setExpanderStyles(existingExpander);\r\n    }\r\n\r\n    delete this.disabled;\r\n    this.clickableElements.forEach((element) =>\r\n      element.classList.add(\"gridder-item\")\r\n    );\r\n    return this.#setupEventListeners();\r\n  }\r\n\r\n  // Activates all listeners stored in @listeners\r\n  #setupEventListeners() {\r\n    return this.listeners.map((elementListeners) =>\r\n      (() => {\r\n        let result = [];\r\n        for (let event in elementListeners.events) {\r\n          let listener = elementListeners.events[event];\r\n          result.push(\r\n            elementListeners.element.addEventListener(event, listener, false)\r\n          );\r\n        }\r\n        return result;\r\n      })()\r\n    );\r\n  }\r\n\r\n  // Deactivates all listeners stored in @listeners\r\n  #removeEventListeners() {\r\n    return this.listeners.map((elementListeners) =>\r\n      (() => {\r\n        let result = [];\r\n        for (let event in elementListeners.events) {\r\n          let listener = elementListeners.events[event];\r\n          result.push(\r\n            elementListeners.element.removeEventListener(event, listener, false)\r\n          );\r\n        }\r\n        return result;\r\n      })()\r\n    );\r\n  }\r\n\r\n  // Disable event\r\n  #disable() {\r\n    this.#removeEventListeners();\r\n  }\r\n\r\n  // Open Expander\r\n  async #open(e) {\r\n\r\n    let el = e.target;\r\n\r\n    // make sure we have the grid item\r\n    if(!el.classList.contains(this.options.itemClass)){\r\n      el = el.closest('.'+this.options.itemClass);\r\n    }\r\n\r\n    // close expander if open\r\n    if(this.expanderElement){\r\n\r\n      // if same grid item is selected, close it\r\n      if(el.classList.contains('active')){\r\n        this.#close(el);  \r\n        return false;\r\n      }\r\n\r\n      // else just close\r\n      this.#close(el); \r\n    }\r\n    \r\n    // then set all as inactive and activate clicked grid item\r\n    this.listElement.querySelectorAll('.'+this.options.itemClass).forEach( div => {\r\n        div.classList.remove('active');\r\n    });\r\n    el.classList.add('active');\r\n\r\n    // insert expander\r\n    let template = this.#insertExpander(el);\r\n\r\n    // get expander content\r\n    const innerHtml = await this.#getExpanderContent(el);\r\n\r\n    // create navigation\r\n    let gridderNavigation = this.#createNavigationElements(el);\r\n\r\n    // create content\r\n    let gridderContent = document.createElement('div');\r\n    gridderContent.classList.add('gridder-content');\r\n    gridderContent.innerHTML = innerHtml;\r\n\r\n    // append content\r\n    template.innerHTML = \"\";\r\n    template.appendChild(gridderNavigation);\r\n    template.appendChild(gridderContent);\r\n\r\n    // initialize navigation events\r\n    this.#initializeNavigationEvents(template, el);\r\n\r\n    // set base var\r\n    this.clickedElement = el;\r\n    this.expanderElement = template;\r\n\r\n    // \r\n    if(this.options.display === 'right'){\r\n      this._columns = this.options.columns;\r\n      this.update({ columns: this.options.columns - Math.round(this.options.columns/4) })\r\n    }\r\n\r\n    // scroll into view\r\n    if(this.options.display === 'bottom'){\r\n      el.scrollIntoView({behavior: \"smooth\", block: \"start\", inline: \"nearest\"});\r\n    }\r\n\r\n    // open callback\r\n    this.options.open.call(this)\r\n  }\r\n\r\n  #setExpanderStyles(template) {\r\n    // set css for display == right\r\n    if(this.options.display === 'right'){\r\n      this.listElement.style.flex = \"65%\";\r\n      template.style.overscrollBehavior = 'contain' ; /* Prevent SCROLL-CHAINING to parent elements. */\r\n      template.style.flex = \" calc(35% - \"+this.options.gap+\"px)\";\r\n      //template.style.height = \"100vh\";\r\n      template.style.position = ' sticky ';\r\n      template.style.alignSelf = 'flex-start';\r\n      template.style.top = ' 0 ';\r\n      template.style.marginLeft = this.options.gap+\"px\";\r\n      template.style.overflowY = 'scroll';\r\n      template.style.overflowX = 'hidden';\r\n    }\r\n    // set css for display == bottom\r\n    if(this.options.display === 'bottom'){\r\n      template.style.gridColumn = '1 / span '+this.options.columns;\r\n      template.style.gridRow = ' span 1 ';\r\n    } \r\n  }\r\n\r\n  #insertExpander = function (el) {\r\n\r\n    // create expander\r\n    let template = document.createElement('div');\r\n\r\n    // style expander\r\n    template.classList.add(this.options.expanderClass);\r\n    template.classList.add(\"gridder-\"+this.options.display);\r\n\r\n    // \r\n    template.innerHTML = this.options.loadingText;\r\n\r\n    //\r\n    this.#setExpanderStyles(template);\r\n    if(this.options.display === 'right'){\r\n      this.#insertAfter(template, this.listElement);\r\n    }\r\n\r\n    if(this.options.display === 'bottom'){\r\n      this.#insertAfter(template, el);\r\n    }\r\n\r\n    el.parentNode.classList.add(this.options.openExpanderClass);\r\n \r\n    return template;\r\n  }\r\n\r\n  #close = function (el) {\r\n\r\n    // remove grid item active class\r\n    el.classList.remove('active');\r\n\r\n    // remove expander bloc\r\n    this.expanderElement.remove();\r\n\r\n    //\r\n    el.parentNode.classList.remove(this.options.openExpanderClass);\r\n\r\n    // remove any unwated styles\r\n    this.listElement.style.width = '100%';\r\n    this.update();\r\n\r\n    // set base var\r\n    this.clickedElement = null;\r\n    this.expanderElement = null;\r\n\r\n     // \r\n     if(this.options.display === 'right'){\r\n      this.update({ columns: this._columns })\r\n    }\r\n\r\n    // close expander callback\r\n    this.options.close.call(el)\r\n\r\n  }\r\n\r\n  #getExpanderContent = async function (el) {\r\n\r\n    // bloc content\r\n    if(el.dataset.target){\r\n      let target = el.dataset.target;\r\n      let targetElement = document.getElementById(target);\r\n      return targetElement.innerHTML.trim();\r\n    }\r\n\r\n    // url content\r\n    let url = el.dataset.url;\r\n    let response = await fetch(url);\r\n    return response.text();\r\n    \r\n  }\r\n\r\n  #createNavigationElements = function (parent) {\r\n\r\n    // create navigation container\r\n    let el = document.createElement('div');\r\n    el.classList.add('gridder-navigation');\r\n\r\n    // add prev button\r\n    if(this.#getPreviousSibling(parent, '.'+this.options.itemClass)){\r\n      let prev = document.createElement('a');\r\n      prev.classList.add('gridder-prev');\r\n      prev.innerHTML = this.options.prevText;\r\n      el.appendChild(prev);\r\n    }\r\n\r\n    // add next button\r\n    if(this.#getNextSibling(parent, '.'+this.options.itemClass)){\r\n      let next = document.createElement('a');\r\n      next.classList.add('gridder-next');\r\n      next.innerHTML = this.options.nextText;\r\n      el.appendChild(next);\r\n    }\r\n\r\n    // add close button\r\n    let close = document.createElement('a');\r\n    close.classList.add('gridder-close');\r\n    close.innerHTML = this.options.closeText;\r\n    el.appendChild(close);\r\n\r\n    return el;\r\n  }\r\n\r\n  #initializeNavigationEvents = function(template, parent) {\r\n\r\n    template.querySelector('.gridder-close').addEventListener('click', () => {\r\n      this.#close(parent);\r\n    });\r\n\r\n    let next = template.querySelector('.gridder-next');\r\n    if(next){\r\n      next.addEventListener('click', () => {\r\n        let target = this.#getNextSibling(parent, '.'+this.options.itemClass);\r\n        if(target) {\r\n          const event = new Event('click', {bubbles: true});\r\n          target.dispatchEvent(event);\r\n        }\r\n      });\r\n    }\r\n\r\n    let prev = template.querySelector('.gridder-prev');\r\n    if(prev){\r\n      prev.addEventListener('click', () => {\r\n        let target = this.#getPreviousSibling(parent, '.'+this.options.itemClass);\r\n        if(target) {\r\n          const event = new Event('click', {bubbles: true});\r\n          target.dispatchEvent(event);\r\n        }\r\n      });\r\n    }\r\n   \r\n  }\r\n\r\n  #insertBefore = function(newNode, existingNode) {\r\n    existingNode.parentNode.prepend(newNode);\r\n  }\r\n\r\n  #insertAfter = function(newNode, existingNode) {\r\n    existingNode.parentNode.insertBefore(newNode, existingNode.nextSibling);\r\n  }\r\n\r\n  #getNextSibling = function (elem, selector) {\r\n    var sibling = elem.nextElementSibling;\r\n    if (!selector) return sibling;\r\n    while (sibling) {\r\n      if (sibling.matches(selector)) return sibling;\r\n      sibling = sibling.nextElementSibling\r\n    }\r\n  };\r\n\r\n  #getPreviousSibling = function (elem, selector) {\r\n    var sibling = elem.previousElementSibling;\r\n    if (!selector) return sibling;\r\n    while (sibling) {\r\n      if (sibling.matches(selector)) return sibling;\r\n      sibling = sibling.previousElementSibling;\r\n    }\r\n  };\r\n\r\n  //////////////// PUBLIC METHODS //////////////////\r\n  \r\n  update(options) {\r\n    this._options = this.options;\r\n    this.options = extend(\r\n        true,\r\n        {},\r\n        this.options,\r\n        options != null ? options : {}\r\n      );\r\n      this.#enable();\r\n  }\r\n\r\n  destroy() {\r\n    this.#disable();\r\n    delete this.element.gridderjs;\r\n    return GridderJS.instances.splice(GridderJS.instances.indexOf(this), 1);\r\n  }\r\n    \r\n}\r\n\r\nGridderJS.options = {};\r\n\r\n// Returns the options for an element or undefined if none available.\r\nGridderJS.optionsForElement = function (element) {\r\n  // Get the `GridderJS.options.elementId` for this element if it exists\r\n  if (element.getAttribute(\"id\")) {\r\n    return GridderJS.options[camelize(element.getAttribute(\"id\"))];\r\n  } else {\r\n    return undefined;\r\n  }\r\n};\r\n\r\n// Resize all gridder instances.\r\n// terrible, but works : to be refactored once I found a way to make it work\r\nGridderJS.resizeGridder = function () {\r\n  let wWidth = window.innerWidth;\r\n  GridderJS.instances.forEach((gridder) => {\r\n    // if additional breakpoint specified\r\n    if(gridder.breakpoints.length < 2) return false;\r\n    // find closest breakpoint options\r\n    for(const n in gridder.breakpoints) {\r\n      if(n > 0){\r\n        let breakpoint = gridder.breakpoints[n];\r\n        if(wWidth <= breakpoint[0]){\r\n          gridder.update(breakpoint[1]);\r\n          break;\r\n        }\r\n      }\r\n      // else use default\r\n      gridder.update(gridder.breakpoints[0][1]);\r\n    };\r\n  });\r\n};\r\n\r\n// Holds a list of all gridder instances\r\nGridderJS.instances = [];\r\n\r\n// Augment jQuery\r\nif (typeof jQuery !== \"undefined\" && jQuery !== null) {\r\n    jQuery.fn.gridderjs = function (options) {\r\n        return this.each(function () {\r\n        return new GridderJS(this, options);\r\n        });\r\n    };\r\n}\r\n\r\n// Resize Event\r\n// terrible, but works : to be refactored once I found a way to make it work\r\nvar resizeTimer;\r\nwindow.addEventListener('resize', function(e){\r\n  clearTimeout(resizeTimer);\r\n  resizeTimer = setTimeout(function() {\r\n    GridderJS.resizeGridder();     \r\n  }, 500);  \r\n});\r\n\r\nexport { GridderJS };","let defaultOptions = {\r\n\r\n    /*\r\n    // expander placement\r\n    'bottom' is how google use to do\r\n    'right' is how google images does now\r\n    */\r\n    display: 'bottom',\r\n\r\n    // number of columns\r\n    columns: 8,\r\n  \r\n    // the gap between the columns\r\n    gap: 20,\r\n\r\n    /*\r\n    // breakpoints responsive\r\n    // must be from highest to lowest width\r\n    example:\r\n    breakpoints: {\r\n        960: {\r\n            columns: 4,\r\n            gap: 15,\r\n        },\r\n        700: {\r\n            columns: 3,\r\n            gap: 5,\r\n        },\r\n        400: {\r\n            columns: 2,\r\n            gap: 5,\r\n            display: 'bottom',\r\n        }\r\n    },\r\n    */\r\n    breakpoints: {},\r\n  \r\n    // activate debug logging\r\n    debug: false,\r\n  \r\n    // navigation text\r\n    nextText: \"Next\",\r\n    prevText: \"Previous\",\r\n    closeText: \"Close\", \r\n    loadingText: \"Loading...\",\r\n\r\n\r\n    // elements classes\r\n    gridClass: \"gridder-list\",\r\n    itemClass: \"gridder-item\",\r\n    expanderClass: \"gridder-show\",\r\n    openExpanderClass: \"gridder-open\",\r\n\r\n    // Called when gridder instance is ready\r\n    init() {},\r\n  \r\n    // Called when gridder instance is open\r\n    // you can access: \r\n    // this.clickedElement\r\n    // this.expanderElement\r\n    open() {},\r\n  \r\n    // Called when gridder expander is closed\r\n    close() {},\r\n  \r\n  }\r\n\r\n  export default defaultOptions;","import GridderJS from \"../src/gridder-js\";\r\n\r\nwindow.GridderJS = GridderJS;\r\n\r\nexport default GridderJS;"],"names":["$fe47969e9bd77e17$export$2e2bcd8739ae039","$fe47969e9bd77e17$var$extend","args","slice","call","arguments","deep","shift","result","$fe47969e9bd77e17$var$isUnextendable","Error","extenders","len","length","i","extender","key","Object","prototype","hasOwnProperty","value","$fe47969e9bd77e17$var$isCloneable","base","Array","isArray","obj","toString","val","$1447e566bc708ad0$var$resizeTimer","display","columns","gap","breakpoints","$1447e566bc708ad0$export$2e2bcd8739ae039","static","constructor","el","options","left","this","element","clickableElements","listeners","clickedElement","expanderElement","listElement","document","querySelector","gridderjs","instances","push","elementOptions","optionsForElement","$40e47d4230293487$export$2e2bcd8739ae039","init","gridClass","children","forEach","clickableElement","events","click","evt","open","parseBreakpoints","resizeGridder","enable","width","parseInt","parentNode","style","gridTemplateColumns","gridAutoFlow","existingExpander","expanderClass","setExpanderStyles","disabled","classList","add","setupEventListeners","map","elementListeners","event","listener","addEventListener","removeEventListeners","removeEventListener","disable","async","e","el1","target","contains","itemClass","closest","close","querySelectorAll","div","remove","template","insertExpander","innerHtml","getExpanderContent","gridderNavigation","createNavigationElements","gridderContent","createElement","innerHTML","appendChild","initializeNavigationEvents","_columns","update","Math","round","scrollIntoView","behavior","block","inline","template1","flex","overscrollBehavior","position","alignSelf","top","marginLeft","overflowY","overflowX","gridColumn","gridRow","loadingText","insertAfter","openExpanderClass","dataset","getElementById","trim","url","fetch","text","parent","getPreviousSibling","prev","prevText","getNextSibling","next","nextText","closeText","Event","bubbles","dispatchEvent","insertBefore","newNode","existingNode","prepend","nextSibling","elem","selector","sibling","nextElementSibling","matches","previousElementSibling","_options","destroy","splice","indexOf","getAttribute","camelize","wWidth","window","innerWidth","gridder","n","breakpoint","jQuery","fn","each","clearTimeout","setTimeout","GridderJS"],"version":3,"file":"gridder-js-min.js.map"}